type NOTIFIED {
  id: ID!
  createdAt: String!
  updatedAt: String!
  read: Boolean!
  reason: NotificationReason!
  from: NotificationSource!
  to: User!
}

union NotificationSource = Post | Comment | FiledReport

enum NotificationOrdering {
  createdAt_asc
  createdAt_desc
  updatedAt_asc
  updatedAt_desc
}

enum NotificationReason {
  commented_on_post
  filed_report_on_resource
  mentioned_in_post
  mentioned_in_comment
}

type Query {
  notifications(read: Boolean, orderBy: NotificationOrdering, first: Int, offset: Int): [NOTIFIED]
}
  
type Mutation {
  markAsRead(id: ID!): NOTIFIED
}

type Subscription {
  notificationAdded(userId: ID!): NOTIFIED
}
